{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","person","classNames","TodoList","todos","map","App","users","useState","setTitle","choosenUser","setChoosenUser","todosFromServer","setTodos","titleError","setTitleError","userError","setUserError","trimmedTitle","trim","action","method","onSubmit","event","preventDefault","newId","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb020cc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\nimport { User } from '../../Types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (user\n    ? (\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    )\n    : (\n      <p className=\"UserInfo\">\n        Unknown user\n      </p>\n    )\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo, User } from '../../Types';\n\nimport usersFromServer from '../../api/users';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const user: User | undefined = usersFromServer\n    .find((person: User) => person.id === userId);\n\n  return (user\n    ? (\n      <article\n        data-id={id}\n        className={classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        <UserInfo user={user} />\n      </article>\n    )\n    : <></>);\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../Types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo, User } from './Types';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const users = usersFromServer;\n  const [title, setTitle] = useState('');\n  const [choosenUser, setChoosenUser] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const trimmedTitle = title.trim();\n\n  const clearForm = () => {\n    setTitle('');\n    setChoosenUser(0);\n  };\n\n  const canConfirmForm = () => {\n    if (!trimmedTitle) {\n      setTitleError(true);\n    }\n\n    if (!choosenUser) {\n      setUserError(true);\n    }\n  };\n\n  const handlerSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const user: User | undefined = users\n      .find(person => person.id === choosenUser);\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    canConfirmForm();\n\n    if (user && trimmedTitle && choosenUser) {\n      setTodos(currentTodos => ([\n        ...currentTodos,\n        {\n          id: newId,\n          title,\n          completed: false,\n          userId: user.id,\n        },\n      ]));\n    }\n\n    if (trimmedTitle && choosenUser) {\n      clearForm();\n    } else if (title !== trimmedTitle) {\n      setTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handlerSubmitForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter the title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {titleError\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={choosenUser}\n              onChange={(event) => {\n                setChoosenUser(+event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n\n              >\n                Choose a user\n              </option>\n              {users.map(user => {\n                const { id, name } = user;\n\n                return (\n                  <option value={id} key={id}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          {userError\n            && (<span className=\"error\">Please choose a user</span>)}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList\n          todos={todos}\n        />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}